import base64
import json
from datetime import datetime

from gen_tools import decrypt_str


def get_byte_vector_str(bs):
    ret = '{'

    for b in bs:
        ret = ret + ', ' + hex(b)

    ret = ret + '}'
    return ret


pwd = input("Password: ")

f = open('config_info', 'r')
content = f.read()
f.close()

decoded = json.JSONDecoder().decode(content)
decrypted_info_json = decrypt_str(base64.b64decode(decoded['ciphertext']),
                             pwd,
                             base64.b64decode(decoded['salt']),
                             base64.b64decode(decoded['nonce']),
                             base64.b64decode(decoded['tag']))
decrypted_info = json.JSONDecoder().decode(decrypted_info_json)

f = open('../data/env_config', 'w')
f.write(decrypted_info['ciphertext'])
f.close()

secretsStr = (f"""
//
// Autogenerated on {datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S')}
//

#ifndef GPSTRACKER_SECRETS_H
#define GPSTRACKER_SECRETS_H

#define CONFIG_DECRYPTION_KEY "{decrypted_info['configPassword']}"
#define CONFIG_DECRYPTION_SALT "{decrypted_info['salt']}"
#define CONFIG_DECRYPTION_NONCE "{decrypted_info['nonce']}"
#define CONFIG_DECRYPTION_TAG "{decrypted_info['tag']}"

#define WIFI_SSID "d-6969"
#define WIFI_PASSWORD "drx13246"

#endif //GPSTRACKER_SECRETS_H
""")

f = open('../src/secrets.h', 'w')
f.write(secretsStr)
f.close()
